=begin
#Iterable API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.8

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.32
=end

require 'spec_helper'
require 'json'

# Unit tests for Iterable::EventsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @instance = Iterable::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@instance).to be_instance_of(Iterable::EventsApi)
    end
  end

  # unit tests for in_app_consume
  # Consume or delete an in-app message
  # Consumes or deletes an in-app message from the server. Use this API if your app does not use one of Iterable’s mobile SDKs, since they call it automatically. If an incoming in-app message is not configured to use the mobile inbox, use this API to \&quot;consume\&quot; it from the server queue after the user sees it. Otherwise, call this API when the user explicitly deletes an inbox-enabled message (by clicking a delete button in its content, swiping it in the inbox, etc.). If you pass a deleteAction value to this endpoint, Iterable generates an inAppDelete event; otherwise, it does not.
  # @param body In-app notification to consume
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'in_app_consume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track
  # Track an event
  # Events are created asynchronously and &lt;b&gt;processed separately from single event (non-bulk) endpoint&lt;/b&gt;. Thus, if you need to make sure events are tracked in order, it is recommended that all of them are sent to the same endpoint (either bulk or non-bulk). &lt;br/&gt;Please note there is a soft limit (default is 8,000) on the number of unique fields a custom event can have. For events of the same name, identically named data fields must be of the same type.&lt;br/&gt;&lt;b&gt;Rate limit&lt;/b&gt;: 2000 requests/second, per project.
  # @param body Event to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_bulk
  # Bulk track events
  # Events are created asynchronously and &lt;b&gt;processed separately from single event (non-bulk) endpoint&lt;/b&gt;. Thus, if you need to make sure events are tracked in order, it is recommended that all of them are sent to the same endpoint (either bulk or non-bulk). &lt;br /&gt; Please note there is a soft limit (default is 8,000) on the number of unique fields a custom event can have. For events of the same name, identically named data fields must be of the same type.&lt;br/&gt;&lt;b&gt;Rate limit&lt;/b&gt;: 10 requests/second, per project.
  # @param body Events to track
  # @param [Hash] opts the optional parameters
  # @return [BulkTrackResponse]
  describe 'track_bulk test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_in_app_click
  # Track an in-app message click
  # Creates an inAppClick event for the specified user, message, and URL. When not using one of Iterable’s mobile SDKs, call this endpoint when a user taps on a button or link in an in-app message.
  # @param body In-app click to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_in_app_click test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_in_app_close
  # Track the closing of an in-app message
  # Creates an inAppClose event for a specific user and in-app message. When not using Iterable&#x27;s mobile SDKs, call this endpoint to indicate that the user tapped a close button, link or back button to close a particular in app-message.
  # @param body In-app close to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_in_app_close test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_in_app_delivery
  # Track the delivery of an in-app message
  # Creates an inAppDelivery event for a specific user, device, and message. When not using Iterable&#x27;s mobile SDKs, call this endpoint to indicate that a particular message has been delivered to a particular device for a particular user. Take care not to call this endpoint multiple times for the same message/device/user combination.
  # @param body In-app delivery to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_in_app_delivery test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_in_app_open
  # Track an in-app message open
  # Creates an inAppOpen event for the specified user and message, and marks the message as having been read. When not using one of Iterable’s mobile SDKs, call this endpoint when a mobile app displays an in-app message to a user.
  # @param body In-app open to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_in_app_open test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_push_open
  # Track a mobile push open
  # @param body Push open to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_push_open test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for track_web_push_click
  # Track a web push click
  # @param body Web Push click to track
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'track_web_push_click test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_events
  # Get user events
  # Get events for a specific user. &lt;b&gt;Rate limit&lt;/b&gt;: 100 requests/second, per project.
  # @param email Email of the user whose events you are retrieving.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of events to retrieve.  (Max is 200)
  # @return [GetEventsResponse]
  describe 'user_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for user_events_by_user_id
  # Get user events by userId
  # Get events for a specific user by userId. &lt;b&gt;Rate limit&lt;/b&gt;: 100 requests/second, per project.
  # @param user_id UserId of the user whose events you are retrieving.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of events to retrieve.  (Max is 200)
  # @return [GetEventsResponse]
  describe 'user_events_by_user_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
