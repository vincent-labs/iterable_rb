=begin
#Iterable API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.8

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.32
=end

require 'spec_helper'
require 'json'

# Unit tests for Iterable::CatalogsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CatalogsApi' do
  before do
    # run before each test
    @instance = Iterable::CatalogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CatalogsApi' do
    it 'should create an instance of CatalogsApi' do
      expect(@instance).to be_instance_of(Iterable::CatalogsApi)
    end
  end

  # unit tests for bulk_delete_catalog_items
  # Bulk delete catalog items
  # Asynchronous. Delete the specified catalog items from the catalog.
  # @param body Catalog bulk delete request
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'bulk_delete_catalog_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for bulk_update_catalog_items
  # Bulk create catalog items
  # Asynchronous. Create up to 1000 catalog items with a single request. Each of a catalog&#x27;s items must have a unique ID that contains only alphanumeric characters and dashes and has a maximum length of 255 characters. If the catalog already contains an item with the same ID as one provided in the request body, the item in the catalog will be completely overwritten, unless replaceUploadedFieldsOnly is set to true. Do not use periods in field names.
  # @param body Catalog bulk update request
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'bulk_update_catalog_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_catalog
  # Create a catalog
  # Create a catalog. Each catalog in a project must have a unique name. Catalog names can be no longer than 255 characters and must contain only alphanumeric characters and dashes.
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'create_catalog test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_catalog
  # Delete a catalog
  # Delete the catalog with the specified name.
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'delete_catalog test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_catalog_item
  # Delete a catalog item
  # Asynchronous. Deletes the specified item from the catalog. Data may not be deleted immediately.
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param item_id Catalog item id [Alphanumeric, dashes, case sensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'delete_catalog_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_catalog_item
  # Get a specific catalog item
  # Get a specific catalog item from the given catalog.
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param item_id Catalog item id [Alphanumeric, dashes, case sensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [CatalogItemWithProperties]
  describe 'get_catalog_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_field_mappings
  # Get field mappings for a catalog
  # Field mappings (field to data types) and undefined fields of a catalog
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [CatalogFieldMappingsResponse]
  describe 'get_field_mappings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for index_catalog_item
  # Create or replace a catalog item
  # Asynchronous. Create or replace the specified catalog item in the given catalog. A catalog item&#x27;s ID must be unique, contain only alphanumeric characters and dashes, and have a maximum length of 255 characters. If the catalog item already exists, it will be replaced by the value provided in the request body. Do not use periods in field names.
  # @param body Catalog item value
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param item_id Catalog item id [Alphanumeric, dashes, case sensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'index_catalog_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_catalog_items
  # Get the catalog items for a catalog
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to list (starting at 1).
  # @option opts [Integer] :page_size Number of results to display per page (defaults to 10).
  # @option opts [String] :order_by Field by which results should be ordered. To also use the sortAscending parameter, this field must have a defined type.
  # @option opts [BOOLEAN] :sort_ascending Sort results by ascending (Defaults to false).
  # @return [GetCatalogItemsResponse]
  describe 'list_catalog_items test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_catalogs
  # Get catalog names
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number to list (starting at 1).
  # @option opts [Integer] :page_size Number of results to display per page (defaults to 10).
  # @return [GetCatalogsResponse]
  describe 'list_catalogs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for partial_update_catalog_item
  # Create or update a catalog item
  # Asynchronous. Create or update the specified catalog item in the given catalog. A catalog item&#x27;s ID must be unique, contain only alphanumeric characters and dashes, and have a maximum length of 255 characters. If the catalog item already exists, its fields will be updated with the values provided in the request body. Previously existing fields not included in the request body will remain as is. Do not use periods in field names.
  # @param body Catalog item contents
  # @param catalog_name 
  # @param item_id 
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'partial_update_catalog_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_field_types
  # Set a catalog&#x27;s field mappings (data types)
  # Set a catalog&#x27;s field mappings (data types). After being set, a given field&#x27;s data type may not be changed. Valid types: boolean, date, geo_location, long, double, object, and string.
  # @param body Catalog Field Types
  # @param catalog_name Catalog name [Alphanumeric, dashes, case insensitive, 255 characters max]
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_field_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
