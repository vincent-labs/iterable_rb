=begin
#Iterable API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.8

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.32
=end

require 'spec_helper'
require 'json'

# Unit tests for Iterable::CampaignsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CampaignsApi' do
  before do
    # run before each test
    @instance = Iterable::CampaignsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CampaignsApi' do
    it 'should create an instance of CampaignsApi' do
      expect(@instance).to be_instance_of(Iterable::CampaignsApi)
    end
  end

  # unit tests for abort_campaign
  # Abort a campaign
  # Abort a campaign given a campaign ID
  # @param body Abort campaign
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'abort_campaign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for campaigns
  # List campaign metadata
  # Get metadata about campaigns in a project. &lt;b&gt;Rate limit&lt;/b&gt;: 100 requests/second, per project.
  # @param [Hash] opts the optional parameters
  # @return [CampaignsResponse]
  describe 'campaigns test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_campaign
  # Cancel a scheduled or recurring campaign
  # Cancel a campaign given a campaign ID
  # @param body Cancel campaign
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'cancel_campaign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for child_campaigns
  # Get child campaigns of a recurring campaign
  # Get child campaigns generated by a recurring campaign. &lt;b&gt;Rate limit&lt;/b&gt;: 100 requests/second, per project.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [CampaignsResponse]
  describe 'child_campaigns test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_campaign
  # Create a campaign
  # Create a new campaign
  # @param body Create campaign
  # @param [Hash] opts the optional parameters
  # @return [CreateCampaignResponse]
  describe 'create_campaign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for metrics
  # Get metrics for campaigns
  # Get metrics for a single campaign or multiple campaigns. &lt;b&gt;Rate limit&lt;/b&gt;: 100 requests/second, per project.
  # @param campaign_id Campaign(s) to export
  # @param [Hash] opts the optional parameters
  # @option opts [DateTime] :start_date_time Export starting from (&gt;&#x3D;).  Accepted formats include YYYY-MM-DD and other ISO 8601 formats.
  # @option opts [DateTime] :end_date_time Export ending at (&lt;).  Accepted formats include YYYY-MM-DD and other ISO 8601 formats.
  # @return [String]
  describe 'metrics test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trigger_campaign
  # Trigger a campaign
  # Trigger a campaign given lists
  # @param body Trigger campaign
  # @param [Hash] opts the optional parameters
  # @return [IterableApiResponse]
  describe 'trigger_campaign test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
